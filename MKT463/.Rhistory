df_regression <- df[df$CustomerID == df_each_consumer[i,]$CustomerID,]
regression <- lm(Units ~ pricePerUnit, data = df_regression)
df_each_consumer[i,]$coefficent <- coef(regression)[2]
}
library(ggplot2)
ggplot(df_each_consumer, aes(x= Dollars, y=coefficent)) +
geom_point(shape=1)+geom_smooth()+labs(title = "The correlation between the two metrics") +
ylab("Regression coefficent") +
xlab("Average Purchase Price")
cor(df$Dollars, df$, use="complete")
df_2 <- na.omit(df_each_consumer)
cor(df$Dollars, df$, use="complete")
View(df)
cor(df_each_consumer$Dollars, df_each_consumer$coefficent, use="complete")
df_each_consumer$coefficent[order(df_each_consumer$coefficent),]
df_each_consumer$coefficent[order(df_each_consumer$coefficent)]
df_each_consumer <- df_each_consumer$coefficent[order(df_each_consumer$coefficent)]
df_each_consumer <- df_each_consumer[order(df_each_consumer$coefficent)]
df_each_consumer <- df_each_consumer[order(df_each_consumer$coefficent),]
df_each_consumer <- df_each_consumer[order(df_each_consumer$coefficent),]
df_each_consumer <- aggregate(Dollars ~ CustomerID, data = df, mean)
length(unique(df$CustomerID))
df_each_consumer$coefficent <- NA
for(i in 1 : nrow(df_each_consumer)){
df_regression <- df[df$CustomerID == df_each_consumer[i,]$CustomerID,]
regression <- lm(Units ~ pricePerUnit, data = df_regression)
df_each_consumer[i,]$coefficent <- coef(regression)[2]
}
library(ggplot2)
ggplot(df_each_consumer, aes(x= Dollars, y=coefficent)) +
geom_point(shape=1)+geom_smooth()+labs(title = "The correlation between the two metrics") +
ylab("Regression coefficent") +
xlab("Average Purchase Price")
cor(df_each_consumer$Dollars, df_each_consumer$coefficent, use="complete")
df_each_consumer <- df_each_consumer[order(df_each_consumer$coefficent),]
View(df_each_consumer)
df_top100 <- df_each_consumer[1:100,c("CustomerID", "coefficient")]
df_top100 <- df_each_consumer[1:100,c("CustomerID", "coefficent")]
View(df_top100)
print(df_top100)
view(df)
views(df)
View(df)
df_weekly <- aggregate(Dollars ~ Week, data = df, sum)
View(df_weekly)
modelStat = data.frame(ar = rep(NA,25),ma =
rep(NA,25),AIC = rep(NA,25))
View(modelStat)
rowNum = 1
for(arDegree in 0:3){
for(maDegree in 0:3){
currentFit = arima(df_weekly,c(arDegree, 0, maDegree))
modelStat[rowNum,] = c(arDegree,maDegree,AIC(currentFit))
rowNum = rowNum + 1
}
}
modelStat = data.frame(ar = rep(NA,25),ma =
rep(NA,25),AIC = rep(NA,25))
rowNum = 1
for(arDegree in 0:3){
for(maDegree in 0:3){
currentFit = arima(df_weekly$Dollars,c(arDegree, 0, maDegree))
modelStat[rowNum,] = c(arDegree,maDegree,AIC(currentFit))
rowNum = rowNum + 1
}
}
View(modelStat)
which.max
?which.max
which.min(modelStat$AIC)
df_weekly[which.min(modelStat$AIC),]
modelStat[which.min(modelStat$AIC),]
best_index <- modelStat[which.min(modelStat$AIC),]
Optional_model = arima(df_weekly$Dollars,c(best_index$ar, 0, best_index$ma))
summary(Optional_model)
Optional_model
library(ggplot2)
ggplot(df_each_consumer, aes(x= Dollars, y=coefficent)) +
geom_point(shape=1)+geom_smooth()+labs(title = "The correlation between the two metrics") +
ylab("Regression coefficent") +
xlab("Average Purchase Price")
cor(df_each_consumer$Dollars, df_each_consumer$coefficent, use="complete")
View(df_each_consumer)
df_each_consumer <- aggregate(pricePerUnit ~ CustomerID, data = df, mean)
length(unique(df$CustomerID))
df_each_consumer$coefficent <- NA
for(i in 1 : nrow(df_each_consumer)){
df_regression <- df[df$CustomerID == df_each_consumer[i,]$CustomerID,]
regression <- lm(Units ~ pricePerUnit, data = df_regression)
df_each_consumer[i,]$coefficent <- coef(regression)[2]
}
View(df_each_consumer)
library(ggplot2)
ggplot(df_each_consumer, aes(x= pricePerUnit, y=coefficent)) +
geom_point(shape=1)+geom_smooth()+labs(title = "The correlation between the two metrics") +
ylab("Regression coefficent") +
xlab("Average Purchase Price")
cor(df_each_consumer$Dollars, df_each_consumer$coefficent, use="complete")
best_index <- modelStat[which.min(modelStat$AIC),]
View(best_index)
plot(optional_model$x,col="red")
optional_model = arima(df_weekly$Dollars,c(best_index$ar, 0, best_index$ma))
optional_model
plot(optional_model$x,col="red")
lines(fitted(fit),col="blue")
optional_model
plot(optional_model$Dollars,col="red")
plot(optional_model)
View(df_top100)
df_store <- aggregate(Units ~ StoreID, data = df, sum)
pct <- round(df_store$Units/sum(df_store$Units)*100,2)
df_store$marketshare <- paste(pct,"%",sep="")
df_store
df_flavor <- aggregate(Units ~ FlavorID, data = df, sum)
pct <- round(df_flavor$Units/sum(df_flavor$Units)*100,2)
df_flavor$marketshare <- pct
df_flavor <- df_flavor[order(-df_flavor$marketshare),]
df_flavor$marketshare <- paste(df_flavor$marketshare, "%",sep="")
head(df_flavor,10)
predict(optional_model, n.ahead=12)
predict(optional_model, n.ahead=52)
pred <- predict(optional_model, n.ahead=52)
ts.plot(gtemp, pred$pred, lty = c(1,3), col=c(5,2))
ts.plot(gtemp, pred$pred, lty = c(1,3), col=c(5,2))
ts.plot(df_weekly$Dollars, pred$pred, lty = c(1,3), col=c(5,2))
ts.plot(df_weekly$Dollars, pred$pred)
require(tseries); require(astsa)
pred <- predict(optional_model, n.ahead=52)
ts.plot(df_weekly$Dollars, pred$pred)
pred <- predict(optional_model, n.ahead=52)
ts.plot(df_weekly$Dollars, pred$pred, lty = c(1,3), col=c(5,2))
?ts.plot
ts.plot(df_weekly, pred$pred, lty = c(1,3), col=c(5,2))
ts.plot(df_weekly$Dollars, pred$pred)
best_index <- modelStat[which.min(modelStat$AIC),]
optional_model = arima(df_weekly$Dollars,c(best_index$ar, 0, best_index$ma))
optional_model
pred <- predict(optional_model, n.ahead=52)
ts.plot(df_weekly$Dollars, pred$pred)
pred <- predict(optional_model, n.ahead=52)
ts.plot(df_weekly$Dollars, pred$pred)
fit <- Arima(df_weekly$Dollars,order=c(best_index$ar, 0, best_index$ma)
fit <- Arima(df_weekly$Dollars,order=c(best_index$ar, 0, best_index$ma))
fit <- Arima(df_weekly$Dollars,order=c(best_index$ar, 0, best_index$ma))
install.packages("Arima")
fit <- Arima(df_weekly$Dollars,order=c(best_index$ar, 0, best_index$ma))
install.packages("forecast")
library(forecast)
fit <- Arima(df_weekly$Dollars,order=c(best_index$ar, 0, best_index$ma))
plot(fit$x,col="red")
lines(fitted(fit),col="blue")
View(df_consumer)
View(df)
df[df$CustomerID == df_top100$CustomerID,]
top100 <- df_top100$CustomerID
df[df$CustomerID == top100,]
df_2 <- df[df$CustomerID == top100,]
View(df_2)
ggplot(df_each_consumer, aes(x= pricePerUnit, y=coefficent)) +
geom_point(shape=1)+geom_smooth()+labs(title = "The correlation between the two metrics") +
ylab("Regression coefficent") +
xlab("Average Purchase Price")
cor(df_each_consumer$Dollars, df_each_consumer$coefficent, use="complete")
(df_each_consumer$Dollars, df_each_consumer$coefficent, use="complete")
cor(df_each_consumer$Dollars, df_each_consumer$coefficent, use="complete")
top100 <- df_top100$CustomerID
top100
df_2 <- df[df$CustomerID == top100,]
df_2 <- subset(df,df$CustomerID == top100)
df$pricePerUnit <- df$Dollars/df$Units
df_2 <- subset(df,df$CustomerID == top100)
df_each_consumer <- aggregate(pricePerUnit ~ CustomerID, data = df, mean)
View(df_each_consumer)
View(df)
df_each_consumer <- aggregate(c(Dollars,Units) ~ CustomerID, data = df, sum)
df_each_consumer <- aggregate(c(Dollars,Units) ~ CustomerID, data = df, sum)
df_each_consumer <- aggregate(cbind(Dollars,Units) ~ CustomerID, data = df, sum)
df_each_consumer$metric1 <- df_each_consumer$Dollars/df_each_consumer$Units
View(df_each_consumer)
length(unique(df$CustomerID))
df_each_consumer$coefficent <- NA
for(i in 1 : nrow(df_each_consumer)){
df_regression <- df[df$CustomerID == df_each_consumer[i,]$CustomerID,]
regression <- lm(Units ~ pricePerUnit, data = df_regression)
df_each_consumer[i,]$coefficent <- coef(regression)[2]
}
View(df_each_consumer)
cor(df_each_consumer$Dollars, df_each_consumer$coefficent, use="complete")
ggplot(df_each_consumer, aes(x= pricePerUnit, y=coefficent)) +
geom_point(shape=1)+geom_smooth()+labs(title = "The correlation between the two metrics") +
ylab("Regression coefficent") +
xlab("Average Purchase Price")
cor(df_each_consumer$Dollars, df_each_consumer$coefficent, use="complete")
ggplot(df_each_consumer, aes(x= metric1, y=coefficent)) +
geom_point(shape=1)+geom_smooth()+labs(title = "The correlation between the two metrics") +
ylab("Regression coefficent") +
xlab("Average Purchase Price")
cor(df_each_consumer$Dollars, df_each_consumer$coefficent, use="complete")
subset(df,df$CustomerID == top100)
df_2 <- NULL
for(i in 1: length(top100)){
df_2 <- df[df$CustomerID ==  top100[i]]
rbind(df_3,df_2)
}
df_2 <- NULL
for(i in 1: length(top100)){
df_2 <- df[df$CustomerID ==  top100[i],]
rbind(df_3,df_2)
}
df_3 <- NULL
for(i in 1: length(top100)){
df_2 <- df[df$CustomerID ==  top100[i],]
rbind(df_3,df_2)
}
for(i in 1: length(top100)){
df_2 <- df[df$CustomerID ==  top100[i],]
rbind(df_3,df_2)
}
View(df_2)
for(i in 1: length(top100)){
df_2 <- df[df$CustomerID ==  top100[i],]
df_3<-rbind(df_3,df_2)
}
View(df_3)
mode(df_3$Flavor)
getmode <- function(v) {
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
}
getmode(df_3$Flavor)
df[is.element(df$CustomerID, top100),]
df_3 <- df[is.element(df$CustomerID, top100),]
View(df_3)
getmode(df_3$Flavor)
df_3 <- NULL
for(i in 1: length(top100)){
df_2 <- df[df$CustomerID ==  top100[i],]
df_3<-rbind(df_3,df_2)
}
df_3 <- df[is.element(df$CustomerID, top100),]
getmode(df_3$Flavor)
View(df_each_consumer)
View(df_each_consumer)
optional_model
fit <- arima(df_weekly$Dollars,c(1,0,0))
fit
summary(optional_model)
fit <- Arima(df_weekly$Dollars,order=c(best_index$ar, 0, best_index$ma))
plot(fit$x,col="red")
lines(fitted(fit),col="blue")
?plot
plot(fit$x,col="red", xlab = 'Weeks', ylab = 'Sales')
lines(fitted(fit),col="blue")
?plot
plot(fit$x,col="red", xlab = 'Weeks', ylab = 'Sales',main = 'Soup Sales over time')
lines(fitted(fit),col="blue")
plot(fit$x,col="red", xlab = 'Weeks', ylab = 'Sales',main = 'Prediction of Soup Sales over time')
lines(fitted(fit),col="blue")
plot(fit$x,col="red", xlab = 'Weeks', ylab = 'Sales',main = 'Prediction of Soup Sales over Time')
lines(fitted(fit),col="blue")
top100 <- df_top100$CustomerID
top100
# Select all data about these 100 price sensitive consumer
df_100 <- df[is.element(df$CustomerID, top100),]
# Function to find mode
getmode <- function(v) {
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
}
# What are the most popular flavor over price sensitive consumer
getmode(df_100$Flavor)
summary(df_100)
summary(df)
getmode(StoreID)
getmode(df_100$StoreID)
getmode(df$Flavor)
getmode(df$Flavor)
getmode(df_100$Flavor)
getmode(df_100$Flavor)
getmode(df_100$Flavor)
getmode(df$StoreID)
getmode(df_100$StoreID)
summary(df)
summary(df_100)
newdata <- subset(df_each_consumer,!(df_each_consumer$coefficent > quantile(df_each_consumer$coefficent, probs=c(.01, .99))[2]
| df_each_consumer$coefficent < quantile(df_each_consumer$coefficent, probs=c(.01, .91))[1]) )
newdata <- subset(df_each_consumer,!(df_each_consumer$coefficent > quantile(df_each_consumer$coefficent, probs=c(.01, .99))[2]
| df_each_consumer$coefficent < quantile(df_each_consumer$coefficent, probs=c(.01, .91))[1]),na.rm = TRUE )
newdata <- subset(df_each_consumer,!(df_each_consumer$coefficent > quantile(df_each_consumer$coefficent, probs=c(.01, .99))[2]
| df_each_consumer$coefficent < quantile(df_each_consumer$coefficent, probs=c(.01, .91))[1]),na.rm = FALSE )
df_each_consumer_new <- na.omit(df_each_consumer_new)
df_each_consumer_new <- na.omit(df_each_consumer)
newdata <- subset(df_each_consumer_new,!(df_each_consumer_new$coefficent > quantile(df_each_consumer_new$coefficent, probs=c(.01, .99))[2]
| df_each_consumer_new$coefficent < quantile(df_each_consumer_new$coefficent, probs=c(.01, .91))[1]))
ggplot(df_each_consumer_new, aes(x= metric1, y=coefficent)) +
geom_point(shape=1)+geom_smooth()+labs(title = "The correlation between the two metrics") +
ylab("Regression coefficent") +
xlab("Average Purchase Price")
cor(df_each_consumer$Dollars, df_each_consumer$coefficent, use="complete")
df_each_consumer_new <- subset(df_each_consumer_new,!(df_each_consumer_new$coefficent > quantile(df_each_consumer_new$coefficent, probs=c(.01, .99))[2]
| df_each_consumer_new$coefficent < quantile(df_each_consumer_new$coefficent, probs=c(.01, .91))[1]))
ggplot(df_each_consumer_new, aes(x= metric1, y=coefficent)) +
geom_point(shape=1)+geom_smooth()+labs(title = "The correlation between the two metrics") +
ylab("Regression coefficent") +
xlab("Average Purchase Price")
cor(df_each_consumer$Dollars, df_each_consumer$coefficent, use="complete")
ggplot(df_each_consumer_new, aes(x= metric1, y=coefficent)) +
geom_point(shape=1)+geom_smooth()+labs(title = "The correlation between the two metrics (without outlier)") +
ylab("Regression coefficent") +
xlab("Average Purchase Price")
cor(df_each_consumer$Dollars, df_each_consumer$coefficent, use="complete")
cor(df_each_consumer$Dollars, df_each_consumer$coefficent, use="complete")
cor(df_each_consumer_new$Dollars, df_each_consumer$coefficent, use="complete")
cor(df_each_consumer_new$Dollars, df_each_consumer_new$coefficent, use="complete")
cor(df_each_consumer$metric1, df_each_consumer$coefficent, use="complete")
cor(df_each_consumer_new$metric1, df_each_consumer_new$coefficent, use="complete")
cor(df_each_consumer$metric1, df_each_consumer$coefficent, use="complete")
df_each_consumer_new <- subset(df_each_consumer_new, df_each_consumer_new$coefficent < 0)
ggplot(df_each_consumer_new, aes(x= metric1, y=coefficent)) +
geom_point(shape=1)+geom_smooth()+labs(title = "The correlation between the two metrics (without outlier)") +
ylab("Regression coefficent") +
xlab("Average Purchase Price")
cor(df_each_consumer_new$metric1, df_each_consumer_new$coefficent, use="complete")
df_each_consumer_new <- na.omit(df_each_consumer)
df_each_consumer_new <- subset(df_each_consumer_new,!(df_each_consumer_new$coefficent > quantile(df_each_consumer_new$coefficent, probs=c(.01, .99))[2]
| df_each_consumer_new$coefficent < quantile(df_each_consumer_new$coefficent, probs=c(.01, .91))[1]))
df_each_consumer_new <- subset(df_each_consumer_new,!(df_each_consumer_new$metric1 > quantile(df_each_consumer_new$metric1, probs=c(.01, .99))[2]
| df_each_consumer_new$metric1 < quantile(df_each_consumer_new$metric1, probs=c(.01, .91))[1]))
ggplot(df_each_consumer_new, aes(x= metric1, y=coefficent)) +
geom_point(shape=1)+geom_smooth()+labs(title = "The correlation between the two metrics (without outlier)") +
ylab("Regression coefficent") +
xlab("Average Purchase Price")
cor(df_each_consumer_new$metric1, df_each_consumer_new$coefficent, use="complete")
df_each_consumer_new <- subset(df_each_consumer_new,!(df_each_consumer_new$coefficent > quantile(df_each_consumer_new$coefficent, probs=c(.05, .95))[2]
| df_each_consumer_new$coefficent < quantile(df_each_consumer_new$coefficent, probs=c(.05, .95))[1]))
ggplot(df_each_consumer_new, aes(x= metric1, y=coefficent)) +
geom_point(shape=1)+geom_smooth()+labs(title = "The correlation between the two metrics (without outlier)") +
ylab("Regression coefficent") +
xlab("Average Purchase Price")
cor(df_each_consumer_new$metric1, df_each_consumer_new$coefficent, use="complete")
ggplot(df_each_consumer, aes(x= metric1, y=coefficent)) +
geom_point(shape=1)+geom_smooth()+labs(title = "The correlation between the two metrics") +
ylab("Regression coefficent") +
xlab("Average Purchase Price")
cor(df_each_consumer$metric1, df_each_consumer$coefficent, use="complete")
summary(df)
sapply(df, sd, na.rm=TRUE)
View(df_each_consumer)
length(unique(df$FlavorID))
length(unique(df$CustomerID))
df_store
head(df_flavor,10)
df_flavor <- aggregate(Units, Flavor ~ FlavorID, data = df, sum)
df_flavor <- df_flavor[1:10,]
df_flavor
df[is.element(df$FlavorID, df_flavor$FlavorID),]
df_flavor
df[is.element(df$FlavorID, df_flavor$FlavorID),]
unique(df[is.element(df$FlavorID, df_flavor$FlavorID),]$flavor)
df_top_flavor <- df[is.element(df$FlavorID, df_flavor$FlavorID),]
unique(df_top_flavor$Flavor)
df_label <- aggregate(Units ~ PrivateLabel, data = df, sum)
pct <- round(df_label$Units/sum(df_label$Units)*100,2)
df_label$marketshare <- pct
df_label
df_each_consumer_new <- df_each_consumer_new[order(df_each_consumer$coefficent),]
df_top100_new <- df_each_consumer_new[1:100,c("CustomerID", "coefficent")]
print(df_top100_new)
df_each_consumer_new <- na.omit(df_each_consumer)
df_each_consumer_new <- subset(df_each_consumer_new,!(df_each_consumer_new$coefficent > quantile(df_each_consumer_new$coefficent, probs=c(.05, .95))[2]
| df_each_consumer_new$coefficent < quantile(df_each_consumer_new$coefficent, probs=c(.05, .95))[1]))
df_each_consumer_new <- df_each_consumer_new[order(df_each_consumer_new$coefficent),]
df_top100_new <- df_each_consumer_new[1:100,c("CustomerID", "coefficent")]
print(df_top100_new)
df_100_new <- df[is.element(df$CustomerID, df_top100_new$CustomerID),]
summary(df_100_new)
summary(df)
summary(df_100_new)
getmode(df_100_new$Flavor)
getmode(df_100$Flavor)
getmode(df_100_new$StoreID)
summary(df)
summary(df)
summary(df_100)
summary(df_100_new)
getmode(df$Flavor)
summary(df_100)
getmode(df_100_new$Flavor)
library(forecast)
fit <- Arima(df_weekly$Dollars,order=c(best_index$ar, 0, best_index$ma))
plot(fit$x,col="red", xlab = 'Weeks', ylab = 'Sales',main = 'Prediction of Soup Sales over Time')
lines(fitted(fit),col="blue")
df_consumer <- read.csv(file="consumerDataFrame.csv", header=TRUE, sep=",", stringsAsFactors=FALSE)
df_item <- read.csv(file="ItemDataFrame.csv", header=TRUE, sep=",", stringsAsFactors=FALSE)
df_consumer$X <- NULL
df_item$X <- NULL
names(df_consumer)
names(df_consumer)[1]<-paste("Units")
names(df_consumer)[2]<-paste("Dollars")
names(df_consumer)[3]<-paste("Week")
names(df_consumer)[4]<-paste("StoreID")
names(df_consumer)[5]<-paste("CustomerID")
names(df_consumer)[6]<-paste("FlavorID")
names(df_item)
names(df_item)[1]<-paste("VolumePerUnit")
names(df_item)[2]<-paste("Ischicken")
names(df_item)[3]<-paste("PrivateLabel")
names(df_item)[4]<-paste("Flavor")
names(df_item)[5]<-paste("Istomato")
names(df_item)[6]<-paste("FlavorID")
df_loop <- NULL
for(i in 1: nrow(df_item)){
# get the subset in consumer dataframe which has the same flavor ID as item
df_loop_sub <- df_consumer[df_consumer$FlavorID == df_item[i,]$FlavorID,]
# if the subset dataframe is not empty
if(nrow(df_loop_sub) != 0){
# column bind the consumer table with item table
df_loop_part <- cbind(df_loop_sub,df_item[i,])
# row bind with previous result
df_loop <- rbind(df_loop,df_loop_part)
}
}
df_loop$FlavorID <- NULL
df_merge <- merge(df_consumer,df_item, by.x = "FlavorID", by.y = "FlavorID")
df <- df_merge
df$pricePerUnit <- df$Dollars/df$Units
df$totalVolume <- df$Units * df$VolumePerUnit
summary(df)
length(unique(df$FlavorID))
length(unique(df$CustomerID))
sapply(df, mean, na.rm=TRUE)
sapply(df, sd, na.rm=TRUE)
df_store <- aggregate(Units ~ StoreID, data = df, sum)
pct <- round(df_store$Units/sum(df_store$Units)*100,2)
df_store$marketshare <- paste(pct,"%",sep="")
df_store
df_flavor <- aggregate(Units ~ FlavorID, data = df, sum)
pct <- round(df_flavor$Units/sum(df_flavor$Units)*100,2)
df_flavor$marketshare <- pct
df_flavor <- df_flavor[order(-df_flavor$marketshare),]
df_flavor$marketshare <- paste(df_flavor$marketshare, "%",sep="")
df_flavor <- df_flavor[1:10,]
df_top_flavor <- df[is.element(df$FlavorID, df_flavor$FlavorID),]
unique(df_top_flavor$Flavor)
df_label <- aggregate(Units ~ PrivateLabel, data = df, sum)
pct <- round(df_label$Units/sum(df_label$Units)*100,2)
df_label$marketshare <- pct
df_label
df_each_consumer <- aggregate(cbind(Dollars,Units) ~ CustomerID, data = df, sum)
df_each_consumer$metric1 <- df_each_consumer$Dollars/df_each_consumer$Units
length(unique(df$CustomerID))
df_each_consumer$coefficent <- NA
for(i in 1 : nrow(df_each_consumer)){
df_regression <- df[df$CustomerID == df_each_consumer[i,]$CustomerID,]
regression <- lm(Units ~ pricePerUnit, data = df_regression)
df_each_consumer[i,]$coefficent <- coef(regression)[2]
}
library(ggplot2)
ggplot(df_each_consumer, aes(x= metric1, y=coefficent)) +
geom_point(shape=1)+geom_smooth()+labs(title = "The correlation between the two metrics") +
ylab("Regression coefficent") +
xlab("Average Purchase Price")
cor(df_each_consumer$metric1, df_each_consumer$coefficent, use="complete")
df_each_consumer_new <- na.omit(df_each_consumer)
df_each_consumer_new <- subset(df_each_consumer_new,!(df_each_consumer_new$coefficent > quantile(df_each_consumer_new$coefficent, probs=c(.05, .95))[2]
| df_each_consumer_new$coefficent < quantile(df_each_consumer_new$coefficent, probs=c(.05, .95))[1]))
ggplot(df_each_consumer_new, aes(x= metric1, y=coefficent)) +
geom_point(shape=1)+geom_smooth()+labs(title = "The correlation between the two metrics (without outlier)") +
ylab("Regression coefficent") +
xlab("Average Purchase Price")
cor(df_each_consumer_new$metric1, df_each_consumer_new$coefficent, use="complete")
df_each_consumer <- df_each_consumer[order(df_each_consumer$coefficent),]
df_top100 <- df_each_consumer[1:100,c("CustomerID", "coefficent")]
print(df_top100)
df_each_consumer_new <- df_each_consumer_new[order(df_each_consumer_new$coefficent),]
df_top100_new <- df_each_consumer_new[1:100,c("CustomerID", "coefficent")]
print(df_top100_new)
df_weekly <- aggregate(Dollars ~ Week, data = df, sum)
ts.plot(gtemp, pred$pred, lty = c(1,3), col=c(5,2))
modelStat = data.frame(ar = rep(NA,25),ma = rep(NA,25),AIC = rep(NA,25))
rowNum = 1
for(arDegree in 0:3){
for(maDegree in 0:3){
currentFit = arima(df_weekly$Dollars,c(arDegree, 0, maDegree))
modelStat[rowNum,] = c(arDegree,maDegree,AIC(currentFit))
rowNum = rowNum + 1
}
}
best_index <- modelStat[which.min(modelStat$AIC),]
optional_model = arima(df_weekly$Dollars,c(best_index$ar, 0, best_index$ma))
optional_model
summary(optional_model)
top100 <- df_top100$CustomerID
top100
df_100 <- df[is.element(df$CustomerID, top100),]
df_100_new <- df[is.element(df$CustomerID, df_top100_new$CustomerID),]
getmode <- function(v) {
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
}
summary(df)
summary(df_100)
summary(df_100_new)
getmode(df_100$Flavor)
getmode(df_100_new$Flavor)
getmode(df$Flavor)
library(forecast)
fit <- Arima(df_weekly$Dollars,order=c(best_index$ar, 0, best_index$ma))
plot(fit$x,col="red", xlab = 'Weeks', ylab = 'Sales',main = 'Prediction of Soup Sales over Time')
lines(fitted(fit),col="blue")
df_weekly <- aggregate(Dollars ~ Week, data = df, sum)
ts.plot(gtemp, pred$pred, lty = c(1,3), col=c(5,2))
